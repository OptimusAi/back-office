trigger:
  branches:
    include:
      - main
  paths:
    include:
      - apps/cpa

pool:
  vmImage: 'ubuntu-latest'

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
- task: Cache@2
  displayName: 'Cache NPM'
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    path: $(npm_config_cache)
    restoreKeys: |
       npm | "$(Agent.OS)"

- script: npm ci --no-optional
  displayName: 'Install Packages'

- script: npm run affected:test -- --base=origin/main~1 --codeCoverage --coverageReporters=cobertura --reporters=jest-junit
  displayName: 'Test'

- script: npm run affected:lint -- --base=origin/main~1
  displayName: 'Lint'

- script: npm run build cpa-shell -- --configuration=dist
  displayName: 'Build'

- task: CopyFiles@2
  displayName: 'Drop Artifacts'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/dist/apps/cpa/shell'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/junit.xml'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/test-results/apps/cpa/shell/coverage/**/*coverage.xml'
